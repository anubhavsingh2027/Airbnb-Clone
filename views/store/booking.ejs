<%-include('../partials/head') %>
</head>
<body class="bg-gray-50 min-h-screen font-sans text-gray-800">
  <%- include('../partials/header') %>




  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-10 animate-fadeIn">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
      <!-- Left: Images & Details -->
      <section class="lg:col-span-2 ml-4 sm:ml-6 lg:ml-8">
        <div class="rounded-2xl overflow-hidden shadow-xl bg-white/90 backdrop-blur-md border border-pink-100">
          <div class="relative">
            <img
              src="<%=home.photo %>"
              class="w-full h-72 object-cover transition-transform duration-300 hover:scale-105"
            />


            <div class="absolute top-4 right-4 flex space-x-2">
              <span class="bg-gradient-to-r from-pink-500 to-red-500 text-white px-3 py-1 rounded-lg text-sm font-semibold shadow-md">Superhost</span>
              <span class="bg-gradient-to-r from-pink-400 to-red-400 text-white px-3 py-1 rounded-lg text-sm font-semibold shadow-md">Self check-in</span>
            </div>
            <div class="absolute bottom-4 left-4 flex items-center gap-2 bg-white/80 px-4 py-2 rounded-lg shadow-md">
              <svg class="w-5 h-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 12.414a8 8 0 111.414-1.414l4.243 4.243a1 1 0 01-1.414 1.414z"/></svg>
              <span class="font-medium text-gray-700">Location:</span>
              <span class="font-semibold text-pink-600"><%=home.location %></span>
            </div>
          </div>
          <div class="p-6">
            <h1 class="text-3xl font-bold text-gray-900 mb-2"><%=home.title || 'Cozy Downtown Apartment' %></h1>
            <p class="text-sm text-gray-600 mb-4"><%=home.location %> • <%=home.guests || 2 %> guests • <%=home.bedrooms || 1 %> bedroom</p>
            <div class="flex items-center space-x-3 mb-6">
              <div class="flex items-center text-yellow-500">
                <svg class="w-5 h-5 inline-block" fill="currentColor" viewBox="0 0 20 20"><path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.286 3.955a1 1 0 00.95.69h4.162c.969 0 1.371 1.24.588 1.81l-3.37 2.448a1 1 0 00-.364 1.118l1.286 3.955c.3.921-.755 1.688-1.54 1.118L10 13.347l-3.547 2.674c-.784.57-1.84-.197-1.54-1.118l1.286-3.955a1 1 0 00-.364-1.118L2.464 9.382c-.783-.57-.38-1.81.588-1.81h4.162a1 1 0 00.95-.69L9.05 2.927z"/></svg>
                <span class="text-sm font-medium ml-1"><%=home.rating || 4.9 %></span>
              </div>
              <span class="text-sm text-gray-500">· <%=home.reviews || 128 %> reviews</span>
            </div>
            <p class="text-gray-700 mb-6"><%=home.description %></p>
            <div class="grid grid-cols-2 sm:grid-cols-4 gap-3">
              <div class="bg-pink-50 p-3 rounded-lg text-center shadow-sm">
                <div class="text-lg font-semibold text-pink-600"><%=home.guests || 2 %></div>
                <div class="text-xs text-gray-500">Guests</div>
              </div>
              <div class="bg-pink-50 p-3 rounded-lg text-center shadow-sm">
                <div class="text-lg font-semibold text-pink-600"><%=home.bedrooms || 1 %></div>
                <div class="text-xs text-gray-500">Bedrooms</div>
              </div>
              <div class="bg-pink-50 p-3 rounded-lg text-center shadow-sm">
                <div class="text-lg font-semibold text-pink-600"><%=home.beds || 1 %></div>
                <div class="text-xs text-gray-500">Beds</div>
              </div>
              <div class="bg-pink-50 p-3 rounded-lg text-center shadow-sm">
                <div class="text-lg font-semibold text-pink-600"><%=home.baths || 1 %></div>
                <div class="text-xs text-gray-500">Baths</div>
              </div>
            </div>
          </div>
        </div>
        <!-- Amenities -->
        <div class="mt-6 bg-white rounded-2xl p-6 shadow-lg border border-pink-100">
          <h3 class="text-lg font-bold mb-4 text-pink-600">Amenities</h3>
          <div class="grid grid-cols-2 sm:grid-cols-4 gap-4 text-sm text-gray-600">
            <div class="flex items-center">
              <svg class="w-5 h-5 text-pink-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7h18M3 11h18M3 15h18M3 19h18"></path></svg>
              Wifi
            </div>
            <div class="flex items-center">
              <svg class="w-5 h-5 text-pink-400 mr-2" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7l9 6 9-6"></path></svg>
              Kitchen
            </div>
            <div class="flex items-center">
              <svg class="w-5 h-5 text-pink-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v18"></path></svg>
              Heating
            </div>
            <div class="flex items-center">
              <svg class="w-5 h-5 text-pink-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14"></path></svg>
              Free parking
            </div>
          </div>
        </div>
      </section>
      <!-- Right: Booking Card -->
      <aside class="sticky top-24">
        <div class="bg-white rounded-2xl p-6 shadow-xl border border-pink-100 animate-fadeIn">
          <div class="flex items-baseline justify-between mb-2">
            <div>
              <div class="text-3xl font-bold text-pink-600">₹<span id="pricePerNight"><%=home.price %></span></div>
              <div class="text-sm text-gray-500">per night/per person</div>
            </div>
            <div class="text-right">
              <div class="text-sm text-gray-500">Rating</div>
              <div class="text-sm font-medium text-yellow-500">
                <span class="inline-flex items-center">
                  <%=home.rating %>
                  <svg class="w-4 h-4 text-yellow-400 ml-1" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.286 3.955a1 1 0 00.95.69h4.162c.969 0 1.371 1.24.588 1.81l-3.37 2.448a1 1 0 00-.364 1.118l1.286 3.955c.3.921-.755 1.688-1.54 1.118L10 13.347l-3.547 2.674c-.784.57-1.84-.197-1.54-1.118l1.286-3.955a1 1 0 00-.364-1.118L2.464 9.382c-.783-.57-.38-1.81.588-1.81h4.162a1 1 0 00.95-.69L9.05 2.927z"/>
                  </svg>
                </span>
              </div>
            </div>
          </div>
          <form id="bookingForm" class="mt-6 space-y-4" method="POST" action="/user/booking/<%=home._id%>">
            <div class="grid grid-cols-2 gap-3">
              <label class="block">
                <span class="text-xs text-gray-600">Check-in</span>
                <input id="checkIn" name="checkIn" type="date" class="mt-1 block w-full rounded-md border-pink-200 shadow-sm focus:ring-2 focus:ring-pink-400 focus:border-pink-400 transition"/>
              </label>
              <label class="block">
                <span class="text-xs text-gray-600">Check-out</span>
                <input id="checkOut" name="checkOut" type="date" class="mt-1 block w-full rounded-md border-pink-200 shadow-sm focus:ring-2 focus:ring-pink-400 focus:border-pink-400 transition"/>
              </label>
            </div>
            <div>
              <span class="text-xs text-gray-600">Guests</span>
              <div class="mt-1 flex items-center justify-between border rounded-md p-2">
                <div class="flex items-center space-x-3">
                  <button type="button" id="decreaseGuests" class="w-8 h-8 bg-pink-50 rounded-md text-pink-600 font-bold text-lg shadow hover:bg-pink-100 transition disabled:opacity-50 disabled:cursor-not-allowed">-</button>
                  <div id="guestsCount" class="text-sm font-medium" data-max-guests="<%=home.maxGuests || 20%>">1</div>
                  <button type="button" id="increaseGuests" class="w-8 h-8 bg-pink-50 rounded-md text-pink-600 font-bold text-lg shadow hover:bg-pink-100 transition disabled:opacity-50 disabled:cursor-not-allowed">+</button>
                </div>
                <div class="text-sm text-gray-500">max <%=home.maxGuests || 20%></div>
              </div>
              <input type="hidden" name="guests" id="guestsInput" value="1" />
              <!-- Add validation message -->
              <p id="guestError" class="text-red-500 text-xs mt-1 hidden">Maximum guests exceeded</p>
            </div>
            <div class="mt-6 bg-white shadow rounded-xl p-6">
              <h2 class="text-xl font-bold mb-4 text-pink-600">SUMMARY:</h2>
              <p id="breakdown-room" class="text-gray-600 mb-2"></p>
              <p id="breakdown-cleaning" class="text-gray-600 mb-2"></p>
              <hr class="my-4 border-pink-200">
              <p>Room Charge: <span id="roomCharge"></span></p>
              <p>Cleaning Fee: <span id="cleaningFee"></span></p>
              <p class="font-bold">Total: <span id="total"></span></p>
            </div>
            <!-- User Details Section -->
            <div class="userdetails space-y-4 mt-6 bg-white shadow rounded-xl p-6">
              <h2 class="text-xl font-bold mb-4 text-pink-600">Guest Information</h2>

              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <!-- Name -->
                <div class="space-y-2">
                  <label for="username" class="block text-sm font-medium text-gray-700">
                    Full Name
                  </label>
                  <input
                    type="text"
                    name="username"
                    id="username"
                    value="<%=user.firstName %> <%=user.lastName || '' %>"
                    class="mt-1 block w-full rounded-md border-pink-200 shadow-sm focus:ring-2 focus:ring-pink-400 focus:border-pink-400 transition"
                    readonly
                  >
                </div>

                <!-- Age -->
                <div class="space-y-2">
                  <label for="age" class="block text-sm font-medium text-gray-700">
                    Age
                    <span class="text-red-500">*</span>
                  </label>
                  <input
                    type="number"
                    name="age"
                    id="age"
                    placeholder="Enter your age"
                    min="18"
                    required
                    class="mt-1 block w-full rounded-md border-pink-200 shadow-sm focus:ring-2 focus:ring-pink-400 focus:border-pink-400 transition"
                  >
                </div>

                <!-- Phone -->
                <div class="space-y-2">
                  <label for="phone" class="block text-sm font-medium text-gray-700">
                    Phone Number
                    <span class="text-red-500">*</span>
                  </label>
                  <input
                    type="tel"
                    name="phone"
                    id="phone"
                    placeholder="Enter your phone number"
                    pattern="[0-9]{10}"
                    required
                    class="mt-1 block w-full rounded-md border-pink-200 shadow-sm focus:ring-2 focus:ring-pink-400 focus:border-pink-400 transition"
                  >
                </div>
                <!-- Aadhar Number -->
                <div class="space-y-2">
                  <label for="aadhar" class="block text-sm font-medium text-gray-700">
                  Aadhar Number
                  <span class="text-red-500">*</span>
                  </label>
                  <input
                  type="text"
                  name="aadharNo"
                  id="aadhar"
                  placeholder="Enter your 12-digit Aadhar number"
                  pattern="[0-9]{12}"
                  maxlength="12"
                  required
                  class="mt-1 block w-full rounded-md border-pink-200 shadow-sm focus:ring-2 focus:ring-pink-400 focus:border-pink-400 transition"
                  >
                </div>
                <!-- Special Requests -->
                <div class="space-y-2">
                  <label for="requests" class="block text-sm font-medium text-gray-700">
                    Special Requests
                  </label>
                  <input
                    type="text"
                    name="specialRequests"
                    id="requests"
                    placeholder="Any special requests?"
                    class="mt-1 block w-full rounded-md border-pink-200 shadow-sm focus:ring-2 focus:ring-pink-400 focus:border-pink-400 transition"
                  >
                </div>
              </div>

              <!-- Hidden fields for booking summary -->
              <input type="hidden" name="totalAmount" id="totalAmountInput">
              <input type="hidden" name="roomCharge" id="roomChargeInput">
              <input type="hidden" name="cleaningFee" id="cleaningFeeInput">
              <input type="hidden" name="numberOfNights" id="numberOfNightsInput">
              <input type="hidden" name="bookingSummary" id="bookingSummaryInput">
            </div>

            <button type="submit"

              class="w-full mt-4 inline-flex items-center justify-center px-4 py-3 bg-gradient-to-r from-pink-500 to-red-500 hover:from-pink-600 hover:to-red-600 text-white rounded-xl font-bold shadow-lg transform hover:-translate-y-0.5 transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none disabled:shadow-none"
            >
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
              </svg>
              <span>Reserve Now</span>
            </button>
            <div class="mt-3 space-y-2">
              <p class="text-xs text-gray-500 flex items-center justify-center">
                <svg class="w-4 h-4 mr-1 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
                </svg>
               All payment process done while checkin
              </p>
              <p class="text-xs text-gray-500 flex items-center justify-center">
                <svg class="w-4 h-4 mr-1 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                Free cancellation up to 24 hours before check-in
              </p>
            </div>
          </form>
        </div>
        <div class="mt-4 text-center text-xs text-gray-500">
          <p>Free cancellation • 24/7 support</p>
        </div>
      </aside>
    </div>
  </main>

<script>
  // Get all DOM elements
  const checkIn = document.getElementById("checkIn");
  const checkOut = document.getElementById("checkOut");
  const guestsCountEl = document.getElementById("guestsCount");
  const guestsInput = document.getElementById("guestsInput");
  const roomChargeEl = document.getElementById("roomCharge");
  const cleaningFeeEl = document.getElementById("cleaningFee");
  const totalEl = document.getElementById("total");
  const breakdownRoomEl = document.getElementById("breakdown-room");
  const breakdownCleaningEl = document.getElementById("breakdown-cleaning");
  const decreaseBtn = document.getElementById("decreaseGuests");
  const increaseBtn = document.getElementById("increaseGuests");
  const guestError = document.getElementById("guestError");
  const submitButton = document.querySelector('button[type="submit"]');


  // Get actual price from the home data
  const pricePerNight = parseFloat(document.getElementById("pricePerNight").textContent) || 120;
  const cleaningFeePerGuest = 20; // 10% of room price
  const maxGuests =  20 ; // Use home's max guests or default to 20

  let guests = 1;

  // Update hidden input when guests change
  function updateGuestsInput(count) {
    document.getElementById("guestsInput").value = count;
  }

   function parseDate(str) { // FIX
    if (!str) return null;
    const [y, m, d] = str.split("-").map(Number);
    if (!y || !m || !d) return null;
    return new Date(y, m - 1, d); // local midnight
  }
  function nightsBetween(inDate, outDate) {
    if (!inDate || !outDate) return 0;
    const ms = outDate - inDate;
    return ms > 0 ? Math.floor(ms / (1000 * 60 * 60 * 24)) : 0;
  }

  function updateGuests(delta) {
    const newGuests = Math.min(Math.max(1, guests + delta), maxGuests);

    // Only update if within bounds
    if (newGuests !== guests) {
      guests = newGuests;
      guestsCountEl.textContent = guests;
      guestsInput.value = guests;

      // Update button states
      decreaseBtn.disabled = guests === 1;
      increaseBtn.disabled = guests === maxGuests;

      // Show/hide error message
      guestError.classList.toggle('hidden', guests <= maxGuests);

      recalc();
    }
  }

  function recalc() {
    const inDate = parseDate(checkIn.value);
    const outDate = parseDate(checkOut.value);
    const nights = nightsBetween(inDate, outDate);

    // Calculate charges based on home's actual price
    const roomCharge = nights * pricePerNight * guests;
    const cleaningFee = cleaningFeePerGuest * guests;
    const total = nights > 0 ? (roomCharge + cleaningFee) : 0;

    // Format currency using Indian Rupee format
    const formatPrice = (amount) => {
      return new Intl.NumberFormat('en-IN', {
        style: 'currency',
        currency: 'INR',
        minimumFractionDigits: 0,
        maximumFractionDigits: 0
      }).format(amount);
    };

    // Update UI with formatted prices
    roomChargeEl.textContent = formatPrice(roomCharge);
    cleaningFeeEl.textContent = formatPrice(cleaningFee);
    totalEl.textContent = formatPrice(total);

    // Update hidden inputs with booking summary
    document.getElementById('totalAmountInput').value = total;
    document.getElementById('roomChargeInput').value = roomCharge;
    document.getElementById('cleaningFeeInput').value = cleaningFee;
    document.getElementById('numberOfNightsInput').value = nights;

    // Create and update booking summary
    const summary = {
      checkIn: checkIn.value,
      checkOut: checkOut.value,
      nights: nights,
      guests: guests,
      pricePerNight: pricePerNight,
      roomCharge: roomCharge,
      cleaningFee: cleaningFee,
      total: total,
      location: '<%=home.location %>',
      propertyName: '<%=home.title %>',
      bookingDate: formatDate(new Date())
    };
    document.getElementById('bookingSummaryInput').value = JSON.stringify(summary);

    if (nights > 0) {
      breakdownRoomEl.textContent = `Room charge: ${formatPrice(pricePerNight)} × ${nights} night(s) × ${guests} guest(s)`;
      breakdownCleaningEl.textContent = `Cleaning fee: ${formatPrice(cleaningFeePerGuest)} × ${guests} guest(s)`;

      // Enable submit button and show success style
      document.querySelector('button[type="submit"]').disabled = false;
      document.querySelector('button[type="submit"]').classList.remove('opacity-50', 'cursor-not-allowed');
    } else {
      breakdownRoomEl.textContent = "Please select valid check-in and check-out dates";
      breakdownCleaningEl.textContent = "";

      // Disable submit button and show disabled style
      document.querySelector('button[type="submit"]').disabled = true;
      document.querySelector('button[type="submit"]').classList.add('opacity-50', 'cursor-not-allowed');
    }
  }
  // FIX: format a Date to YYYY-MM-DD using *local* parts (no UTC)
  function formatDate(d) { // FIX (replaced previous toISOString version)
    const y = d.getFullYear();
    const m = String(d.getMonth() + 1).padStart(2, "0");
    const day = String(d.getDate()).padStart(2, "0");
    return `${y}-${m}-${day}`;
  }

  // Defaults (today / tomorrow)
  const today = new Date();
  const tomorrow = new Date();
  tomorrow.setDate(today.getDate() + 1);

  checkIn.value = formatDate(today);        // uses local formatter (FIX: behavior)
  checkOut.value = formatDate(tomorrow);    // uses local formatter (FIX: behavior)

  checkIn.min = formatDate(today);          // prevent past dates (unchanged API, fixed formatter)
  checkOut.min = formatDate(tomorrow);      // checkout at least tomorrow (unchanged API, fixed formatter)

  // Keep checkout ≥ checkin + 1 day
  checkIn.addEventListener("change", () => {
    const inDate = parseDate(checkIn.value);   // uses local parser (FIX: behavior)
    if (inDate) {
      const newOut = new Date(inDate);
      newOut.setDate(inDate.getDate() + 1);
      checkOut.min = formatDate(newOut);
      if (parseDate(checkOut.value) <= inDate) {
        checkOut.value = formatDate(newOut);
      }
    }
    recalc();
  });

  // Form validation function
  function validateForm() {
    const inDate = parseDate(checkIn.value);
    const outDate = parseDate(checkOut.value);
    const nights = nightsBetween(inDate, outDate);

    // Get form elements
    const ageInput = document.getElementById('age');
    const phoneInput = document.getElementById('phone');

    // Validate age
    const age = parseInt(ageInput.value);
    const isAgeValid = age >= 18 && age <= 100;
    ageInput.classList.toggle('border-red-500', !isAgeValid && ageInput.value);

    // Validate phone
    const isPhoneValid = /^[0-9]{10}$/.test(phoneInput.value);
    phoneInput.classList.toggle('border-red-500', !isPhoneValid && phoneInput.value);

    // Check all conditions
    const isValid =
      nights > 0 &&
      guests >= 1 &&
      guests <= maxGuests &&
      isAgeValid &&
      isPhoneValid;

    // Update submit button state
    submitButton.disabled = !isValid;
    submitButton.classList.toggle('opacity-50', !isValid);
    submitButton.classList.toggle('cursor-not-allowed', !isValid);

    return isValid;
  }

  // Event listeners
  increaseBtn.addEventListener("click", () => updateGuests(1));
  decreaseBtn.addEventListener("click", () => updateGuests(-1));

  checkIn.addEventListener("change", () => {
    recalc();
    validateForm();
  });

  checkOut.addEventListener("change", () => {
    recalc();
    validateForm();
  });

  // Form submission handler
  document.getElementById('bookingForm').addEventListener('submit', (e) => {
    if (!validateForm()) {
      e.preventDefault();
      return false;
    }
    return true;
  });

  // Initialize the form
  recalc();
  validateForm();
</script>
</body>
</html></div>